model:
  type: sequential
  input_shape: [28, 28, 1]
  layers:
    - Conv2D: { filters: 32, kernel_size: 3, activation: relu }
    - MaxPooling2D: { pool_size: 2 }
    - Conv2D: { filters: 64, kernel_size: 3, activation: relu }
    - MaxPooling2D: { pool_size: 2 }
    - Flatten: {}
    - Dense: { units: 128, activation: relu }
    - Dense: { units: 10, activation: softmax }

compile:
  optimizer: adam
  loss: sparse_categorical_crossentropy
  metrics: [accuracy]
