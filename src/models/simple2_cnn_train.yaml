model:
  type: Sequential
  input_shape: [28, 28, 1]
  layers:
    - Conv2D: { filters: 8, kernel_size: 3, activation: relu, padding: same }
    - MaxPooling2D: { pool_size: 2 }
    - Flatten: {}
    - Dense: { units: 64, activation: relu }
    - Dropout: { rate: 0.5 }
    - Dense: { units: 10, activation: linear }
compile:
  optimizer: adam
  loss: SparseCategoricalCrossentropy
  metrics: [accuracy]
train:
  batch_size: 128
  epochs: 5
  validation_split: 0.1
